name: Azure Pipelines
variables:
  python.version: '3.7.6'
  webAppName: 'QualityRelease-AppService'
  azureServiceConnectionId: ''
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: Hosted Ubuntu 1604
    steps:
    # Needed for Terraform VM deployment
     - task: InstallSSHKey@0
       inputs:
         knownHostsEntry: 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
'
         sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDN0ml7qOhwQHzFeJYP5s98F/pTJwLQs8fGgiWjWmo42nzOzIOK+25sf+zEc/FGBjQlJB25j8WKu87n8thhr8p8YXjTQi0zjs1jfW8L67ZGujE/ohMfcDqO6bp+ehwBg4BVHJnP43tyrVvOVYtdp0YyHzPuP18lvQinbc5KlCoTM0xsQgKXV8dYRgk9OdG5WvzvTHVR1isFVGL4gUgpFC1KVX4jVWnqfUOtCtEob1sJ9nww8n0OYPpaxrYs8kxLF7/92MhuWuIab+t5rGhxpPsXpZ4l0Kooif5OLGyYtxc9Wfwz2LJLg/caCPDV64KNG8icxYRM39wGszPI3OGTHHmXRpVM4fB8Ep68JJvGw/NplDJQBGFvCeiUSJWc3VVbd6OY2jyYYET4w1KUtEebunEa8k15Fc8alWYrmCdl3OzpZFgh51A/XGWHO3kZ0nevBVaFEFmGlGIywLYwsXm2rkQ8DpXepc0eXUVwo3h9IIuKrP2t9no0L2AjCZRzYaF+ISc= vijay@LAPTOP-P2S8IFB7'
         sshKeySecureFile: './id_rsa.pub'
     - task: TerraformInstaller@0
       inputs: 
         terraformVersion: 0.13.2
     
     - task: TerraformCLI@0
       displayName: Terraform Initialize
       inputs:
          command: 'init'
          workingDirectory: './Project Starter Resources/terraform'
          allowTelemetryCollection: true
     
     -task:  TerraformCLI@0
       displayName: Terraform Apply
       inputs:
          command: 'apply'
          backendType: azurerm
          backendAzureRmResourceGroupName: 'tfstate'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmStorageAccountName: 'tfstate18208'
          backendServiceArm: 'Azure Subscription 1()'
          backendAzureRmKey: 'terraform.tfstate'
          workingDirectory: './Project Starter Resources/terraform'
          allowTelemetryCollection: true

    - task: ArchiveFiles@2
      displayName: 'Archive FakeRestAPI'
      inputs:
        rootFolderOrFile: '~/QualityRelease/Project Starter Resources/automatedtesting/jmeter/fakerestapi'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
    -   publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
      displayName: 'Upload Package'
      artifact: drop-fakerestapi
- stage:
  jobs:
  - deployment: FakeRestAPI
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'TEST'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: ''
              appName: ''
              appType: webApp
              package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


